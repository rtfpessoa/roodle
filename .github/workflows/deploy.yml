name: deploy

on:
  push:
    branches: [main]

jobs:
  version:
    runs-on: ubuntu-latest
    container:
      image: codacy/git-version
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fix tar access
        run: apk add --update --no-progress tar
      - name: Fix git access
        run: |
          git config --global --add safe.directory '*'
      - name: Get next version
        id: version
        run: |
          export NEXT_VERSION="$(/bin/git-version --folder=$PWD --release-branch=main)"
          echo "Next version is ${NEXT_VERSION}"
          echo "version=${NEXT_VERSION}" >> $GITHUB_ENV
          echo "version=${NEXT_VERSION}" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.version.outputs.version }}

  build:
    runs-on: ubuntu-latest
    needs: [version]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/rtfpessoa/roodle
          tags: |
            type=semver,pattern={{version}},value=${{ needs.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.version.outputs.version }}
            type=semver,pattern={{major}},value=${{ needs.version.outputs.version }}

      - name: Build Cache for Docker
        uses: actions/cache@v3
        with:
          path: build-cache
          key: ${{ runner.os }}-build-cache-${{ hashFiles('**/go.sum','**/yarn.lock') }}

      - name: Inject build-cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.2
        with:
          cache-source: build-cache

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  tag:
    runs-on: ubuntu-latest
    needs: [version, build]
    steps:
      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ needs.version.outputs.version }}"

  deploy:
    runs-on: ubuntu-latest
    environment: Production
    needs: [version, build]
    steps:
      - name: Deploy service on Render
        run: |
          curl -X GET -v "${{ secrets.RENDER_DEPLOY_WEBHOOK }}&imgURL=ghcr.io%2Frtfpessoa%2Froodle%3A${{ needs.version.outputs.version }}"
